/* Core */
import { createSlice } from "@reduxjs/toolkit";

/* Instruments */
import { incrementAsync } from "./thunks";

const initialState: UserSliceState = {
  cpf: "",
  email: "",
  status: "idle",
};

export const userSlice = createSlice({
  name: "user",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(incrementAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(incrementAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.value += action.payload;
      });
  },
});

/* Types */
export interface UserSliceState {
  cpf: string;
  email: string;
  status: "idle" | "loading" | "failed";
}
